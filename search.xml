<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2023/10/13 模拟赛</title>
    <url>/2023/10/14/2023-10-13-%E6%A8%A1%E6%8B%9F%E8%B5%9B/</url>
    <content><![CDATA[<h1 id="div2-a.-clock">Div2 A. clock</h1>
<p>脑瘫题。但是我零零散散写了 100min。/tuu</p>
<p>显然有一种方式是对于每一组数据，枚举答案，根据时针、分针、秒针的移动速度，算出角度，然后判断对不对。
<span id="more"></span></p>
<p>但是我的写法对于分数加减要算一个 <span
class="math inline">\(\log\)</span> 复杂度的 <span
class="math inline">\(\gcd\)</span>，这样刚好会 T。</p>
<p>所以说就进行预处理，我使用了 <code>unordered_map</code> 对
<code>string</code> 到 <code>vector&lt;string&gt;</code>
进行映射来预处理。</p>
<p>写了大概 <span class="math inline">\(100\)</span>
行。这是不好的。</p>
<p>正解的话可以把每个分数乘以 <span class="math inline">\(120\)</span>
因为最小的单位是时针每秒走的 <span
class="math inline">\(\frac{1}{120}\)</span> 度。</p>
<p>然后三四十行就能搞定。</p>
<h1 id="div2-b.-chess">Div2 B. chess</h1>
<p>水题。</p>
<p>稍微想一想可以得出某个点可以被反色当且仅当周围的点和他颜色相同。</p>
<p>不然会影响到之前的点。</p>
<p>统计一下这些点，快速幂算 <span class="math inline">\(2^{cnt}\)</span>
即可。</p>
<p>这题大概写了 20min。</p>
<h1 id="div2-c.-sequence">Div2 C. sequence</h1>
<p>好题。</p>
<p>赛时连最拉的 dp 都没想到写了个 20
分最低档还交错代码。要反省一下。</p>
<p>首先想到如果填完了 <span class="math inline">\(1\sim i\)</span>
位，要填下一位的话，只和 <span class="math inline">\(i,i-1,i-2\)</span>
有关，所以把后两位不知道的值记在状态里，转移就好了。</p>
<p>关于这方面 <span class="math inline">\(dp\)</span>
的小优化，可以使用前缀和，把转移方程中的两部分和分开算，可以优化掉一个
<span class="math inline">\(O(n)\)</span>。</p>
<p>对于正解，我们发现只有最大值会有影响，所以我们把最大值以及最大值在哪一位记录下来，便可以把状态数优化到
<span class="math inline">\(O(n^2)\)</span>。</p>
<p>然后转移本来是 <span class="math inline">\(O(n^3)\)</span>
的，通过差分+前缀和可以优化到 <span
class="math inline">\(O(n^2)\)</span> 的复杂度。</p>
<h1 id="div2-d.-graph">Div2 D. graph</h1>
<p>好题。</p>
<p>赛时写了一个最低档 10 分，输输输。</p>
<p>其实可以拆贡献，它要求一个 <span class="math inline">\(\sum
|S|^k\)</span>。</p>
<p>把 <span class="math inline">\((1+1+\cdots+1)^k\)</span> 展开，每个
<span class="math inline">\(k\)</span> 个 <span
class="math inline">\(1\)</span>
相乘在原集合对应的东西，考虑枚举集合中的 <span
class="math inline">\(k\)</span> 个元素，对应的贡献为 <span
class="math inline">\(2^{n-c}\)</span>，<span
class="math inline">\(c\)</span> 为不同的元素个数，即枚举 <span
class="math inline">\(k\)</span> 条边后不同的点的个数。</p>
<p>注意到 <span class="math inline">\(k\)</span>
比较小，所以直接分类讨论，对于每种情况统计答案。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>关于赛时暴力打法的一些总结</title>
    <url>/2023/10/14/%E5%85%B3%E4%BA%8E%E8%B5%9B%E6%97%B6%E6%9A%B4%E5%8A%9B%E6%89%93%E6%B3%95%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="6c229398b3de15ff6c8624bdf3d154a47fd12e662a77ad41740d4e45d3c394ca">846ad8ec6e6943494449754732cecabb3704fbdcb76d3728168f8743718907bffb8de7ea1e9806b11d73a0a73f7be1c5c6259adf35a1177045db136443bf0d73644603d62ed59ac12a113f8a6980d7ab3ca14a4a8e6d6e1a30d115e430cb361724a27bde6e3ea04fd5cbb7e5963e4caa047f31bad50dbedd066432f5b35dcbe63d686009532a7661be6baaf4e9f1bc11d956984629adf343457707d1919674da7f0f094e47f4e069db6eaaaa5aea5020e30d43f5febb729b8243645d041aa02388040418c2bbbf6e6c6c857664724b6b9da1f5f7f42b575b80906c924c3f80e7591da672c4c55e58ad8e876b5092c108d4dc9704b38ac1cd6f1dac95650699e317a65b69fa78e5278a23ebdd9ba3d667b10086b504d2740d3b18ef9c89d88953366c16e926223a1f07c31b6789f329cb2396e6fe6b1bd10da96e542ab498b64101b907d87e5e55392045e16bd820d4aaee8c86753cc36ecea4565b954a03fa5f84c9b49b8f20854b6151f4faf442ea052c856b768cc585584d84909e321d8cc32c1e7cb059de7932297e564a051f6c54dc88257eb9b28886b689f91c74637dea143889e33970084291cc6357a16060b3d5404ac15b11e251e3a6280002d2b6a2152c99609ff26495705f25f9385d4d16de5962a5f6cb1bfa0d2557d912a049c9e20531fd4c595fa4470cc44148b0e15fda9277eeb5955716c9a113a8b23e24b10ba80b7099d8ae3aaef8789c22b5944c09d50cafde6f5d8a7f5102fe29580409c1147b926ea36e31d195b4b256cd6d67fa50c7f7b478375826acd494bceec3d342464eeda71a68d30941b490efbc4d60a38360d778b381fed0e2a9f951d4ee12605cb76d596712d600faf9661bb174f05545b00f6792b66e3d6d301cf805b5c9f0434f5cd4c11e79bd9442d7abd2c35c2a6ead5be773a5632575bac00cd46ab4ca70c51b0e8ca570be2c8c964d051d592be23f689a5b989fe6c7c9f361cd2e64ad5f2c971468287b5d9553df7fed4140e4179b4b7aafdc41840eadf1e21ef5d4652bb36939579fbb351a29ae5c356cab85018e147300ce02388e01f6f3481ef886e6f1dbe213346a74fa590a9a3d9cae8a360112458ebcacfde2ed3bb7cd857605758399a13f0c22fd8b95d9b2a7c11773cfa0bc38dae01a8d8cb32678d994316bcac13c30ec1bed80dd9f2cf582b931237c40a1e05339f6293a376d6a5cc767bfe6b857948fd0906a3846fe5b6dcd93b993bccc8efd512be47ec82ce175421b2822b045a9bd958c3309d3e7e9d8423b72077f0839c3ff7271185aa53be4ef927ca6e450ba94d9f90fd23ef096f279a6a4baf9809be9909532953f1ff230e6239de0c1c4e2ffa3c44d249c444c6055e4abab41fbf6f48be8ed69c2ffc815181d22667a1b017717cc461cd7342fb4a0343035c71a46494a5284211904d69ad5004ae41531d08b613e474bf9c43153d5bb3e775f4a25518c3cfae1ee0ce782e828f80ce6af0daf24836f327921a406f2218431c56ae4874b0ae4d18abfdf60382679ef04f5bc04ab2d0db3ad90d674e534bcf0a5a3d866f5c5002e214e4a7b1efc34af800c1f70d087fcb849b528efb1d69d51c37b19c9f8c695d6cdcc2f50b0a1c23d640a87008c7a536ff7ed88a6331d717635387b0766a5b9400e7164964eb290ee92ffdaa05fe4fc7117dcc51566fa</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">在这里输入</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>2023/10/15 刷题记录</title>
    <url>/2023/10/15/2023-10-15-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="acwing-97.-约数之和">Acwing 97. 约数之和</h2>
<p>首先看到约数之和，应该条件反射到约数和定理，大概是若要求 <span
class="math inline">\(\sigma(x)\)</span>，<span
class="math inline">\(x\)</span> 可以表示为 <span
class="math inline">\(\prod_{i=1}^k p_i^{a_i}\)</span>，那么 <span
class="math inline">\(\sigma(x)=\prod_{i=1}^k \left(\sum_{j=0}^{a_i}
p_i^j\right)\)</span>。</p>
<p>所以我们要求 <span class="math inline">\(a^b\)</span>
的质因数分解，只要求 <span class="math inline">\(a\)</span>
的分解，然后把每一项的指数乘上 <span class="math inline">\(b\)</span>
就可以得到 <span class="math inline">\(a^b\)</span> 的质因数分解。
<span id="more"></span></p>
<p>然后对于 <span
class="math inline">\((1+p+p^2+\cdots+p^x)\)</span>，可以使用标准的等比数列公式，但是由于模数
<span class="math inline">\(9901\)</span> 比较小，直接分治即可。</p>
<h2 id="acwing-109.-天才-acm">Acwing 109. 天才 ACM</h2>
<p>看到校验值的定义，应该想到如何快速求这个最优值。</p>
<p>我们想到，如果有 <span
class="math inline">\(0&lt;a&lt;b&lt;c&lt;d\)</span>，显然有 <span
class="math inline">\((a-d)^2+(b-c)^2&gt;(a-b)^2+(c-d)^2\)</span>
以及其他的任何一种取法，拆了括号后易证。</p>
<p>所以校验值的最优取法就是不断取出最大值和最小值。</p>
<p>一开始我想到了二分，但是加入一个点后，这个校验值难以更新，复杂度高，所以不可取。</p>
<p>所以考虑知道了一个左端点，求最多能延申到那个点。</p>
<p>这里可以选择倍增，但是不能直接使用快排，要在加入一些点时使用归并。</p>
<h2 id="acwing-119.-给树染色">Acwing 119. 给树染色</h2>
<p>首先，如果染色没有限制，一定先选权值最大的点染色。</p>
<p>但是如果以最优方案选了一个点，他的权值最大的儿子应该立即被染，否则不优。</p>
<p>那么我们就考虑一个点 <span class="math inline">\(x\)</span>，<span
class="math inline">\(x\)</span> 的最大儿子 <span
class="math inline">\(y\)</span>，以及另一个点 <span
class="math inline">\(z\)</span>。</p>
<p>我们现在就是考虑先染 <span class="math inline">\(x,y\)</span>
还是先染 <span class="math inline">\(z\)</span>。</p>
<p>如果先染前者，那么有：<span
class="math inline">\(x+2y+3z&lt;z+2x+3y\)</span> ，即 <span
class="math inline">\(\dfrac{x+y}{2}&gt;z\)</span>。</p>
<p>我们发现 这两项都是平均值的形式，并且我们进一步推广，可以发现一组点
<span class="math inline">\(A\)</span> 比一组点 <span
class="math inline">\(B\)</span></p>
<p>先染，要满足 <span
class="math inline">\(\dfrac{sumval_A}{|A|}&gt;\dfrac{sumval_B}{B}\)</span>。</p>
<p>所以我们如果在现有的点中得出了某一组点要先染，我们就可以把他合并到他父亲上，然后变成一个大点。</p>
<p>一直合并之后，我们发现答案不是很好求，所以我们可以考虑在合并的过程中计算答案。</p>
<h2 id="acwing-91.-最短哈密尔顿路径">Acwing 91. 最短哈密尔顿路径</h2>
<p>考虑到 <span class="math inline">\(n\leq 20\)</span>，所以记 <span
class="math inline">\(f_{S,i}\)</span>
表示经过了的点的集合与目前所在的点，<span
class="math inline">\(O(2^n\times n^2)\)</span> 转移即可。</p>
<h2 id="acwing-120.-防线">Acwing 120. 防线</h2>
<p>考虑到只有一位是奇数，那么在这一位之前所有的前缀和都是偶数，在这一位之后的所有前缀和都是奇数，一看到这种
<code>000001111</code>
的形式，就要想到二分，而我们判断一段前缀内的被等差数列覆盖的个数总和是很好求的，复杂度
<span class="math inline">\(O(n)\)</span>，所以加上二分总复杂度为 <span
class="math inline">\(O(n\log n)\)</span>。</p>
<h2 id="acwing-123.-士兵">Acwing 123. 士兵</h2>
<p>首先注意到每次操作会让某一个 <span class="math inline">\(x\)</span>
或某一个 <span class="math inline">\(y\)</span> 加一或者减一，我们考虑将
<span class="math inline">\(x\)</span>，<span
class="math inline">\(y\)</span> 分开来看，因为 他们之间没有影响。</p>
<p>最终要求 <span class="math inline">\(y\)</span> 相同，<span
class="math inline">\(x\)</span>
相邻，首先算使某一个数列变相同的办法就是直接排序之后算中位数，但是这个相邻比较难搞，所以我们直接排序了之后在下标为
<span class="math inline">\(i\)</span> 的数减去 <span
class="math inline">\(i\)</span>，然后转换成变成相同，但是注意这之前要先排序，不然不会最优。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
</search>
